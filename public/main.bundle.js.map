{"version":3,"sources":["/Users/samerabla/Desktop/Test/Test-Nodejs/frontend/src/$_lazy_route_resource lazy","/Users/samerabla/Desktop/Test/Test-Nodejs/frontend/src/app/app.component.css","/Users/samerabla/Desktop/Test/Test-Nodejs/frontend/src/app/app.component.html","/Users/samerabla/Desktop/Test/Test-Nodejs/frontend/src/app/app.component.ts","/Users/samerabla/Desktop/Test/Test-Nodejs/frontend/src/app/app.module.ts","/Users/samerabla/Desktop/Test/Test-Nodejs/frontend/src/app/upload.service.ts","/Users/samerabla/Desktop/Test/Test-Nodejs/frontend/src/environments/environment.ts","/Users/samerabla/Desktop/Test/Test-Nodejs/frontend/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/samerabla/Desktop/Test/Test-Nodejs/frontend/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/samerabla/Desktop/Test/Test-Nodejs/frontend/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"upload()\\\">\\n  <input #i type=\\\"file\\\" formControlName=\\\"xxx\\\">\\n  <button type=\\\"submit\\\">go</button>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/samerabla/Desktop/Test/Test-Nodejs/frontend/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { UploadService } from './upload.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('i') up:ElementRef;\n  title = 'app';\n  form: FormGroup\n\n  constructor(private fb: FormBuilder,\n              private uploadService: UploadService\n  ){\n    this.form = this.fb.group({\n          xxx: ''\n        });\n      \n  }\n\n  ngOnInit(){}\n\n  upload(){\n    //console.log(this.up.nativeElement.files[0]);\n    let fd = new FormData();\n    fd.append('xxx', this.up.nativeElement.files[0], this.up.nativeElement.files[0].name);\n    let url = 'upload';\n\n    \n    // send request using AJAX\n    //this.uploadService.postFormAjax(url, fd);\n\n    this.uploadService.postForm(url, fd).subscribe( \n      data => {\n        console.log('ok   ' + data);\n      },\n      err => console.log({\n        error: err\n      }))\n    \n  }\n    \n  \n    \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/samerabla/Desktop/Test/Test-Nodejs/frontend/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { UploadService } from './upload.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [UploadService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/samerabla/Desktop/Test/Test-Nodejs/frontend/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient,  HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class UploadService {\n\n  constructor(private http: HttpClient) { }\n\n  postTest(url) {\n    \n    return this.http.get(url);\n  }\n\n  postForm(url, body) {\n    // var headers = new HttpHeaders();\n    // headers.append('Content-Type', 'application/form-data');\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'multipart/form-data'\n      })\n    };\n\n    return this.http.post(url, body)\n  }\n\n  postFormAjax(url, body){\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", url, true);\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        console.log(xhr.response);\n      }\n    }  \n    xhr.send(body);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/samerabla/Desktop/Test/Test-Nodejs/frontend/src/app/upload.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/samerabla/Desktop/Test/Test-Nodejs/frontend/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/samerabla/Desktop/Test/Test-Nodejs/frontend/src/main.ts"],"sourceRoot":"webpack:///"}